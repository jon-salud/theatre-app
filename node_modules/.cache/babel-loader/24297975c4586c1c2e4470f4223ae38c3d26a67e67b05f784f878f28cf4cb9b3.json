{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JulioS\\\\Github\\\\TheatreApp\\\\theatre-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { hospitalData } from './data';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedHospital, setSelectedHospital] = useState('');\n  const [selectedTheater, setSelectedTheater] = useState('');\n  const [selectedOperatingRoom, setSelectedOperatingRoom] = useState('');\n  const [selectedSpecialty, setSelectedSpecialty] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [filteredAssignments, setFilteredAssignments] = useState([]);\n  const getAssignmentsByDoctor = doctor => {\n    const result = [];\n    for (const hospital in hospitalData) {\n      for (const theater in hospitalData[hospital]) {\n        for (const operatingRoom in hospitalData[hospital][theater]) {\n          for (const specialty in hospitalData[hospital][theater][operatingRoom]) {\n            if (hospitalData[hospital][theater][operatingRoom][specialty].includes(doctor)) {\n              result.push({\n                hospital,\n                theater,\n                operatingRoom,\n                specialty,\n                doctors: hospitalData[hospital][theater][operatingRoom][specialty]\n              });\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n  const getAssignmentsBySpecialty = specialty => {\n    const result = [];\n    for (const hospital in hospitalData) {\n      for (const theater in hospitalData[hospital]) {\n        for (const operatingRoom in hospitalData[hospital][theater]) {\n          if (hospitalData[hospital][theater][operatingRoom][specialty]) {\n            result.push({\n              hospital,\n              theater,\n              operatingRoom,\n              specialty,\n              doctors: hospitalData[hospital][theater][operatingRoom][specialty]\n            });\n          }\n        }\n      }\n    }\n    return result;\n  };\n  const clearFilters = () => {\n    setSelectedHospital('');\n    setSelectedTheater('');\n    setSelectedOperatingRoom('');\n    setSelectedSpecialty('');\n    setSelectedDoctor('');\n  };\n  const handleHospitalChange = event => {\n    setSelectedHospital(event.target.value);\n    setSelectedTheater('');\n    setSelectedOperatingRoom('');\n    setSelectedSpecialty('');\n    setSelectedDoctor('');\n  };\n  const handleTheaterChange = event => {\n    setSelectedTheater(event.target.value);\n    setSelectedOperatingRoom('');\n    setSelectedSpecialty('');\n    setSelectedDoctor('');\n  };\n  const handleOperatingRoomChange = event => {\n    setSelectedOperatingRoom(event.target.value);\n    setSelectedSpecialty('');\n    setSelectedDoctor('');\n  };\n  const handleSpecialtyChange = event => {\n    setSelectedSpecialty(event.target.value);\n    setSelectedDoctor('');\n  };\n  useEffect(() => {\n    let assignments = [];\n    if (selectedDoctor) {\n      assignments = getAssignmentsByDoctor(selectedDoctor);\n    } else if (selectedSpecialty) {\n      assignments = getAssignmentsBySpecialty(selectedSpecialty);\n    } else {\n      for (const hospital in hospitalData) {\n        if (!selectedHospital || selectedHospital === hospital) {\n          for (const theater in hospitalData[hospital]) {\n            if (!selectedTheater || selectedTheater === theater) {\n              for (const operatingRoom in hospitalData[hospital][theater]) {\n                if (!selectedOperatingRoom || selectedOperatingRoom === operatingRoom) {\n                  for (const specialty in hospitalData[hospital][theater][operatingRoom]) {\n                    if (!selectedSpecialty || selectedSpecialty === specialty) {\n                      assignments.push({\n                        hospital,\n                        theater,\n                        operatingRoom,\n                        specialty,\n                        doctors: hospitalData[hospital][theater][operatingRoom][specialty]\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    setFilteredAssignments(assignments);\n  }, [selectedHospital, selectedTheater, selectedOperatingRoom, selectedSpecialty, selectedDoctor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hospital-select\",\n          children: \"Hospital: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"hospital-select\",\n          onChange: handleHospitalChange,\n          value: selectedHospital,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), Object.keys(hospitalData).map(hospital => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hospital,\n            children: hospital\n          }, hospital, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"theater-select\",\n          children: \"Theater: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"theater-select\",\n          onChange: handleTheaterChange,\n          value: selectedTheater,\n          disabled: !selectedHospital && !selectedDoctor && !selectedSpecialty,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), selectedHospital && Object.keys(hospitalData[selectedHospital]).map(theater => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: theater,\n            children: theater\n          }, theater, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operating-room-select\",\n          children: \"Operating Room: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operating-room-select\",\n          onChange: handleOperatingRoomChange,\n          value: selectedOperatingRoom,\n          disabled: !selectedTheater && !selectedDoctor && !selectedSpecialty,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), selectedTheater && Object.keys(hospitalData[selectedHospital][selectedTheater]).map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: room,\n            children: room\n          }, room, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"specialty-select\",\n          children: \"Specialty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"specialty-select\",\n          onChange: handleSpecialtyChange,\n          value: selectedSpecialty,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), Object.keys(hospitalData).flatMap(hospital => Object.keys(hospitalData[hospital]).flatMap(theater => Object.keys(hospitalData[hospital][theater]).flatMap(operatingRoom => Object.keys(hospitalData[hospital][theater][operatingRoom])))).filter((value, index, self) => self.indexOf(value) === index).map(specialty => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: specialty,\n            children: specialty\n          }, specialty, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"doctor-input\",\n          children: \"Doctor: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"doctor-input\",\n          type: \"text\",\n          value: selectedDoctor,\n          onChange: e => setSelectedDoctor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: clearFilters,\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"assignments-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Theater\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operating Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Specialty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredAssignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.hospital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.theater\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.operatingRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.specialty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.doctors.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AG2MMAhOyYFzp7+aNJhfHOUZ2T8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","hospitalData","jsxDEV","_jsxDEV","App","_s","selectedHospital","setSelectedHospital","selectedTheater","setSelectedTheater","selectedOperatingRoom","setSelectedOperatingRoom","selectedSpecialty","setSelectedSpecialty","selectedDoctor","setSelectedDoctor","filteredAssignments","setFilteredAssignments","getAssignmentsByDoctor","doctor","result","hospital","theater","operatingRoom","specialty","includes","push","doctors","getAssignmentsBySpecialty","clearFilters","handleHospitalChange","event","target","value","handleTheaterChange","handleOperatingRoomChange","handleSpecialtyChange","assignments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","Object","keys","map","disabled","room","flatMap","filter","index","self","indexOf","type","e","onClick","assignment","join","_c","$RefreshReg$"],"sources":["C:/Users/JulioS/Github/TheatreApp/theatre-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { hospitalData } from './data';\r\nimport { Assignment } from './types';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [selectedHospital, setSelectedHospital] = useState<string>('');\r\n  const [selectedTheater, setSelectedTheater] = useState<string>('');\r\n  const [selectedOperatingRoom, setSelectedOperatingRoom] = useState<string>('');\r\n  const [selectedSpecialty, setSelectedSpecialty] = useState<string>('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState<string>('');\r\n  const [filteredAssignments, setFilteredAssignments] = useState<Assignment[]>([]);\r\n\r\n  const getAssignmentsByDoctor = (doctor: string): Assignment[] => {\r\n    const result: Assignment[] = [];\r\n    for (const hospital in hospitalData) {\r\n      for (const theater in hospitalData[hospital]) {\r\n        for (const operatingRoom in hospitalData[hospital][theater]) {\r\n          for (const specialty in hospitalData[hospital][theater][operatingRoom]) {\r\n            if (hospitalData[hospital][theater][operatingRoom][specialty].includes(doctor)) {\r\n              result.push({ hospital, theater, operatingRoom, specialty, doctors: hospitalData[hospital][theater][operatingRoom][specialty] });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getAssignmentsBySpecialty = (specialty: string): Assignment[] => {\r\n    const result: Assignment[] = [];\r\n    for (const hospital in hospitalData) {\r\n      for (const theater in hospitalData[hospital]) {\r\n        for (const operatingRoom in hospitalData[hospital][theater]) {\r\n          if (hospitalData[hospital][theater][operatingRoom][specialty]) {\r\n            result.push({ hospital, theater, operatingRoom, specialty, doctors: hospitalData[hospital][theater][operatingRoom][specialty] });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSelectedHospital('');\r\n    setSelectedTheater('');\r\n    setSelectedOperatingRoom('');\r\n    setSelectedSpecialty('');\r\n    setSelectedDoctor('');\r\n  };\r\n\r\n  const handleHospitalChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedHospital(event.target.value);\r\n    setSelectedTheater('');\r\n    setSelectedOperatingRoom('');\r\n    setSelectedSpecialty('');\r\n    setSelectedDoctor('');\r\n  };\r\n\r\n  const handleTheaterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedTheater(event.target.value);\r\n    setSelectedOperatingRoom('');\r\n    setSelectedSpecialty('');\r\n    setSelectedDoctor('');\r\n  };\r\n\r\n  const handleOperatingRoomChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedOperatingRoom(event.target.value);\r\n    setSelectedSpecialty('');\r\n    setSelectedDoctor('');\r\n  };\r\n\r\n  const handleSpecialtyChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedSpecialty(event.target.value);\r\n    setSelectedDoctor('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    let assignments: Assignment[] = [];\r\n    if (selectedDoctor) {\r\n      assignments = getAssignmentsByDoctor(selectedDoctor);\r\n    } else if (selectedSpecialty) {\r\n      assignments = getAssignmentsBySpecialty(selectedSpecialty);\r\n    } else {\r\n      for (const hospital in hospitalData) {\r\n        if (!selectedHospital || selectedHospital === hospital) {\r\n          for (const theater in hospitalData[hospital]) {\r\n            if (!selectedTheater || selectedTheater === theater) {\r\n              for (const operatingRoom in hospitalData[hospital][theater]) {\r\n                if (!selectedOperatingRoom || selectedOperatingRoom === operatingRoom) {\r\n                  for (const specialty in hospitalData[hospital][theater][operatingRoom]) {\r\n                    if (!selectedSpecialty || selectedSpecialty === specialty) {\r\n                      assignments.push({\r\n                        hospital,\r\n                        theater,\r\n                        operatingRoom,\r\n                        specialty,\r\n                        doctors: hospitalData[hospital][theater][operatingRoom][specialty]\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFilteredAssignments(assignments);\r\n  }, [selectedHospital, selectedTheater, selectedOperatingRoom, selectedSpecialty, selectedDoctor]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Hospital Assignments</h1>\r\n      <div className=\"filters\">\r\n        <div className=\"filter-item\">\r\n          <label htmlFor=\"hospital-select\">Hospital: </label>\r\n          <select id=\"hospital-select\" onChange={handleHospitalChange} value={selectedHospital}>\r\n            <option value=\"\">All</option>\r\n            {Object.keys(hospitalData).map(hospital => (\r\n              <option key={hospital} value={hospital}>{hospital}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-item\">\r\n          <label htmlFor=\"theater-select\">Theater: </label>\r\n          <select id=\"theater-select\" onChange={handleTheaterChange} value={selectedTheater} disabled={!selectedHospital && !selectedDoctor && !selectedSpecialty}>\r\n            <option value=\"\">All</option>\r\n            {selectedHospital && Object.keys(hospitalData[selectedHospital]).map(theater => (\r\n              <option key={theater} value={theater}>{theater}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-item\">\r\n          <label htmlFor=\"operating-room-select\">Operating Room: </label>\r\n          <select id=\"operating-room-select\" onChange={handleOperatingRoomChange} value={selectedOperatingRoom} disabled={!selectedTheater && !selectedDoctor && !selectedSpecialty}>\r\n            <option value=\"\">All</option>\r\n            {selectedTheater && Object.keys(hospitalData[selectedHospital][selectedTheater]).map(room => (\r\n              <option key={room} value={room}>{room}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-item\">\r\n          <label htmlFor=\"specialty-select\">Specialty: </label>\r\n          <select id=\"specialty-select\" onChange={handleSpecialtyChange} value={selectedSpecialty}>\r\n            <option value=\"\">All</option>\r\n            {Object.keys(hospitalData).flatMap(hospital => \r\n              Object.keys(hospitalData[hospital]).flatMap(theater => \r\n                Object.keys(hospitalData[hospital][theater]).flatMap(operatingRoom => \r\n                  Object.keys(hospitalData[hospital][theater][operatingRoom])\r\n                )\r\n              )\r\n            ).filter((value, index, self) => self.indexOf(value) === index).map(specialty => (\r\n              <option key={specialty} value={specialty}>{specialty}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-item\">\r\n          <label htmlFor=\"doctor-input\">Doctor: </label>\r\n          <input id=\"doctor-input\" type=\"text\" value={selectedDoctor} onChange={(e) => setSelectedDoctor(e.target.value)} />\r\n        </div>\r\n        <button className=\"clear-button\" onClick={clearFilters}>Clear Filters</button>\r\n      </div>\r\n      <table className=\"assignments-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Hospital</th>\r\n            <th>Theater</th>\r\n            <th>Operating Room</th>\r\n            <th>Specialty</th>\r\n            <th>Doctors</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredAssignments.map((assignment, index) => (\r\n            <tr key={index}>\r\n              <td>{assignment.hospital}</td>\r\n              <td>{assignment.theater}</td>\r\n              <td>{assignment.operatingRoom}</td>\r\n              <td>{assignment.specialty}</td>\r\n              <td>{assignment.doctors.join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}